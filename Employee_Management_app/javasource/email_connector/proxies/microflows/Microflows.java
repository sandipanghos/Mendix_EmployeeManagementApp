// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package email_connector.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the Email_Connector module
	public static void aCO_ADE_IncomingAccountMetrics(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Email_Connector.ACO_ADE_IncomingAccountMetrics").withParams(params).execute(context);
	}
	public static void aCO_ADE_OutgoingAccountMetrics(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Email_Connector.ACO_ADE_OutgoingAccountMetrics").withParams(params).execute(context);
	}
	public static void aCT_Attachment_CreateNew(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_Attachment_CreateNew").withParams(params).execute(context);
	}
	public static void aCT_Attachment_Download(IContext context, email_connector.proxies.Attachment _attachment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Attachment", _attachment == null ? null : _attachment.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_Attachment_Download").withParams(params).execute(context);
	}
	public static void aCT_EmailAccount_ClientCredentialsGrant_SaveAutoConfig(IContext context, email_connector.proxies.EmailProvider _emailProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailProvider", _emailProvider == null ? null : _emailProvider.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailAccount_ClientCredentialsGrant_SaveAutoConfig").withParams(params).execute(context);
	}
	public static void aCT_EmailAccount_ClientCredentialsGrant_SaveManualConfig(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailAccount_ClientCredentialsGrant_SaveManualConfig").withParams(params).execute(context);
	}
	public static java.lang.String aCT_EmailAccount_GetOrRenewTokenJavaAction(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		return (java.lang.String) Core.microflowCall("Email_Connector.ACT_EmailAccount_GetOrRenewTokenJavaAction").withParams(params).execute(context);
	}
	public static void aCT_EmailAccount_LaunchEmailConnectorOverview(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Email_Connector.ACT_EmailAccount_LaunchEmailConnectorOverview").withParams(params).execute(context);
	}
	public static void aCT_EmailAccount_RetrieveEmails(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailAccount_RetrieveEmails").withParams(params).execute(context);
	}
	public static void aCT_EmailAccount_SaveAutoConfig(IContext context, email_connector.proxies.EmailProvider _emailProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailProvider", _emailProvider == null ? null : _emailProvider.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailAccount_SaveAutoConfig").withParams(params).execute(context);
	}
	public static void aCT_EmailAccount_SaveEmailSecurityConfiguration(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailAccount_SaveEmailSecurityConfiguration").withParams(params).execute(context);
	}
	public static void aCT_EmailAccount_SaveManualConfig(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailAccount_SaveManualConfig").withParams(params).execute(context);
	}
	public static email_connector.proxies.EmailMessage aCT_EmailMessage_ComposeNewEmail(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Email_Connector.ACT_EmailMessage_ComposeNewEmail").withParams(params).execute(context);
		return result == null ? null : email_connector.proxies.EmailMessage.initialize(context, result);
	}
	public static void aCT_EmailMessage_ComposeReply(IContext context, email_connector.proxies.EmailMessage _emailMessage, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailMessage_ComposeReply").withParams(params).execute(context);
	}
	public static void aCT_EmailMessage_Delete(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailMessage_Delete").withParams(params).execute(context);
	}
	public static void aCT_EmailMessage_ResetQueuedStatus(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailMessage_ResetQueuedStatus").withParams(params).execute(context);
	}
	public static void aCT_EmailMessage_SendComposedEmail(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailMessage_SendComposedEmail").withParams(params).execute(context);
	}
	public static void aCT_EmailMessage_SendEmailAndClosePage(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailMessage_SendEmailAndClosePage").withParams(params).execute(context);
	}
	public static void aCT_EmailMessage_SendQueuedEmails(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailMessage_SendQueuedEmails").withParams(params).execute(context);
	}
	public static void aCT_EmailMessageList_ResetQueuedStatus(IContext context, java.util.List<email_connector.proxies.EmailMessage> _emailList)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_emailList = null;
		if (_emailList != null)
		{
			listparam_emailList = new java.util.ArrayList<>();
			for (var obj : _emailList) {
				listparam_emailList.add(obj.getMendixObject());
			}
		}
		params.put("EmailList", listparam_emailList);

		Core.microflowCall("Email_Connector.ACT_EmailMessageList_ResetQueuedStatus").withParams(params).execute(context);
	}
	public static void aCT_Emailtemplate_CreateToken(IContext context, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_Emailtemplate_CreateToken").withParams(params).execute(context);
	}
	public static void aCT_EmailTemplate_DuplicateAndShowPage(IContext context, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailTemplate_DuplicateAndShowPage").withParams(params).execute(context);
	}
	public static void aCT_EmailTemplate_GenerateAndSetPlainText(IContext context, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailTemplate_GenerateAndSetPlainText").withParams(params).execute(context);
	}
	public static void aCT_EmailTemplate_Save(IContext context, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailTemplate_Save").withParams(params).execute(context);
	}
	public static void aCT_EmailTemplate_ShowModelReflectionPage(IContext context, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_EmailTemplate_ShowModelReflectionPage").withParams(params).execute(context);
	}
	public static void aCT_IncomingEmailConfiguration_ChangeMoveToFolder(IContext context, email_connector.proxies.Folder _folder, email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Folder", _folder == null ? null : _folder.getMendixObject());
		params.put("IncomingEmailConfiguration", _incomingEmailConfiguration == null ? null : _incomingEmailConfiguration.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_IncomingEmailConfiguration_ChangeMoveToFolder").withParams(params).execute(context);
	}
	public static void aCT_IncomingEmailConfiguration_FolderSelect(IContext context, email_connector.proxies.Folder _folder, email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Folder", _folder == null ? null : _folder.getMendixObject());
		params.put("IncomingEmailConfiguration", _incomingEmailConfiguration == null ? null : _incomingEmailConfiguration.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_IncomingEmailConfiguration_FolderSelect").withParams(params).execute(context);
	}
	public static void aCT_LDAPConfiguration_ChangeBaseName(IContext context, email_connector.proxies.LDAPBaseDN _lDAPBaseName, email_connector.proxies.LDAPConfiguration _lDAPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("LDAPBaseName", _lDAPBaseName == null ? null : _lDAPBaseName.getMendixObject());
		params.put("LDAPConfiguration", _lDAPConfiguration == null ? null : _lDAPConfiguration.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_LDAPConfiguration_ChangeBaseName").withParams(params).execute(context);
	}
	public static void aCT_OAuthProvider_Create(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Email_Connector.ACT_OAuthProvider_Create").withParams(params).execute(context);
	}
	public static void aCT_OAuthProvider_DeleteProvider(IContext context, email_connector.proxies.OAuthProvider _oAuthProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthProvider", _oAuthProvider == null ? null : _oAuthProvider.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_OAuthProvider_DeleteProvider").withParams(params).execute(context);
	}
	public static void aCT_OAuthProvider_Save(IContext context, email_connector.proxies.OAuthProvider _oAuthProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthProvider", _oAuthProvider == null ? null : _oAuthProvider.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_OAuthProvider_Save").withParams(params).execute(context);
	}
	public static void aCT_OAuthProvider_ShowOAuthProviderPage(IContext context, email_connector.proxies.OAuthProvider _oAuthProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthProvider", _oAuthProvider == null ? null : _oAuthProvider.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_OAuthProvider_ShowOAuthProviderPage").withParams(params).execute(context);
	}
	public static void aCT_SaveEmailAccountSettingAndClosePage(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_SaveEmailAccountSettingAndClosePage").withParams(params).execute(context);
	}
	public static void aCT_SelectedConfiguration_FetchEmailServerConfigAndShowConfigPage(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_SelectedConfiguration_FetchEmailServerConfigAndShowConfigPage").withParams(params).execute(context);
	}
	public static void aCT_ShowAccountLoginPage(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Email_Connector.ACT_ShowAccountLoginPage").withParams(params).execute(context);
	}
	public static void aCT_ShowAccountSettingsPage(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.ACT_ShowAccountSettingsPage").withParams(params).execute(context);
	}
	public static boolean bCO_EmailAccount_EncryptPassword(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.BCO_EmailAccount_EncryptPassword").withParams(params).execute(context);
	}
	public static boolean bCO_LDAPConfiguration_EncryptPassword(IContext context, email_connector.proxies.LDAPConfiguration _lDAPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("LDAPConfiguration", _lDAPConfiguration == null ? null : _lDAPConfiguration.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.BCO_LDAPConfiguration_EncryptPassword").withParams(params).execute(context);
	}
	public static boolean bCO_OAuthProvider_EncryptPassword(IContext context, email_connector.proxies.OAuthProvider _oAuthProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthProvider", _oAuthProvider == null ? null : _oAuthProvider.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.BCO_OAuthProvider_EncryptPassword").withParams(params).execute(context);
	}
	public static boolean bCO_OAuthToken_EncryptTokens(IContext context, email_connector.proxies.OAuthToken _oAuthToken)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthToken", _oAuthToken == null ? null : _oAuthToken.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.BCO_OAuthToken_EncryptTokens").withParams(params).execute(context);
	}
	public static boolean bCO_Pk12Certificate_EncryptPassphrase(IContext context, email_connector.proxies.Pk12Certificate _pk12Certificate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Pk12Certificate", _pk12Certificate == null ? null : _pk12Certificate.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.BCO_Pk12Certificate_EncryptPassphrase").withParams(params).execute(context);
	}
	public static email_connector.proxies.EmailAccount dS_EmailAccount_CreateDummyAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Email_Connector.DS_EmailAccount_CreateDummyAccount").withParams(params).execute(context);
		return result == null ? null : email_connector.proxies.EmailAccount.initialize(context, result);
	}
	public static java.util.List<email_connector.proxies.Folder> dS_FolderList(IContext context, email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("IncomingEmailConfiguration", _incomingEmailConfiguration == null ? null : _incomingEmailConfiguration.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Email_Connector.DS_FolderList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> email_connector.proxies.Folder.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static email_connector.proxies.LDAPConfiguration dS_GetLDAPConfiguration(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Email_Connector.DS_GetLDAPConfiguration").withParams(params).execute(context);
		return result == null ? null : email_connector.proxies.LDAPConfiguration.initialize(context, result);
	}
	public static email_connector.proxies.Pk12Certificate dS_GetPKCS12Certificate(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Email_Connector.DS_GetPKCS12Certificate").withParams(params).execute(context);
		return result == null ? null : email_connector.proxies.Pk12Certificate.initialize(context, result);
	}
	public static java.util.List<email_connector.proxies.LDAPBaseDN> dS_LDAPBaseDNList(IContext context, email_connector.proxies.LDAPConfiguration _lDAPConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("LDAPConfiguration", _lDAPConfiguration == null ? null : _lDAPConfiguration.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Email_Connector.DS_LDAPBaseDNList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> email_connector.proxies.LDAPBaseDN.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static email_connector.proxies.ModelReflectionChecker dS_ModelReflectionChecker(IContext context, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Email_Connector.DS_ModelReflectionChecker").withParams(params).execute(context);
		return result == null ? null : email_connector.proxies.ModelReflectionChecker.initialize(context, result);
	}
	public static java.util.List<email_connector.proxies.EmailMessage> oCH_Background_EmailFetchMicroflow(IContext context, java.util.List<email_connector.proxies.EmailMessage> _emailMessageList)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_emailMessageList = null;
		if (_emailMessageList != null)
		{
			listparam_emailMessageList = new java.util.ArrayList<>();
			for (var obj : _emailMessageList) {
				listparam_emailMessageList.add(obj.getMendixObject());
			}
		}
		params.put("EmailMessageList", listparam_emailMessageList);

		java.util.List<IMendixObject> objs = Core.microflowCall("Email_Connector.OCH_Background_EmailFetchMicroflow").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> email_connector.proxies.EmailMessage.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static void oCH_Background_EmailReceiveComplete(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Email_Connector.OCH_Background_EmailReceiveComplete").withParams(params).execute(context);
	}
	public static void oCH_Background_ReceiveBatchFailed(IContext context, java.lang.String _message, java.lang.String _errorType, java.lang.String _stackTrace, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Message", _message);
		params.put("ErrorType", _errorType);
		params.put("StackTrace", _stackTrace);
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_Background_ReceiveBatchFailed").withParams(params).execute(context);
	}
	public static void oCH_Background_SubscriptionStateChanged(IContext context, java.lang.String _state, java.lang.String _comment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("State", _state);
		params.put("Comment", _comment);
		Core.microflowCall("Email_Connector.OCH_Background_SubscriptionStateChanged").withParams(params).execute(context);
	}
	public static void oCH_EmailMessage_ToggleRecipients(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_EmailMessage_ToggleRecipients").withParams(params).execute(context);
	}
	public static void oCH_EmailTemplate_ToggleRecipients(IContext context, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_EmailTemplate_ToggleRecipients").withParams(params).execute(context);
	}
	public static void oCH_IncomingEmailConfiguration_Select(IContext context, email_connector.proxies.EmailProvider _emailProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailProvider", _emailProvider == null ? null : _emailProvider.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_IncomingEmailConfiguration_Select").withParams(params).execute(context);
	}
	public static void oCH_LDAPConfiguration_DeleteConfiguration(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_LDAPConfiguration_DeleteConfiguration").withParams(params).execute(context);
	}
	public static void oCH_OAuthProvider_CreateNew(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_OAuthProvider_CreateNew").withParams(params).execute(context);
	}
	public static void oCH_OAuthProvider_GetOrCreateOAuthProvider(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_OAuthProvider_GetOrCreateOAuthProvider").withParams(params).execute(context);
	}
	public static void oCH_OAuthProvider_SetCallbackURL_AuthCode(IContext context, email_connector.proxies.OAuthProvider _oAuthProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthProvider", _oAuthProvider == null ? null : _oAuthProvider.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_OAuthProvider_SetCallbackURL_AuthCode").withParams(params).execute(context);
	}
	public static void oCH_OAuthProvider_SetCallbackURL_ClientCred(IContext context, email_connector.proxies.OAuthProvider _oAuthProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthProvider", _oAuthProvider == null ? null : _oAuthProvider.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_OAuthProvider_SetCallbackURL_ClientCred").withParams(params).execute(context);
	}
	public static void oCH_OutgoingEmailConfiguration_Select(IContext context, email_connector.proxies.EmailProvider _emailProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailProvider", _emailProvider == null ? null : _emailProvider.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_OutgoingEmailConfiguration_Select").withParams(params).execute(context);
	}
	public static void oCH_Pk12Certificate_DeleteCertificate(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.OCH_Pk12Certificate_DeleteCertificate").withParams(params).execute(context);
	}
	public static void oEN_SetIncomingServer(IContext context, email_connector.proxies.IncomingServer _incomingServer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("IncomingServer", _incomingServer == null ? null : _incomingServer.getMendixObject());
		Core.microflowCall("Email_Connector.OEN_SetIncomingServer").withParams(params).execute(context);
	}
	public static void oEN_SetOutgoingServer(IContext context, email_connector.proxies.OutgoingServer _outgoingServer)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OutgoingServer", _outgoingServer == null ? null : _outgoingServer.getMendixObject());
		Core.microflowCall("Email_Connector.OEN_SetOutgoingServer").withParams(params).execute(context);
	}
	public static java.lang.String pRS_AuthCodeCallbackGET(IContext context, system.proxies.HttpResponse _httpResponse, java.lang.String _customOpPath, java.lang.String _code, java.lang.String _state, java.lang.String _error, java.lang.String _errorDescription)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("httpResponse", _httpResponse == null ? null : _httpResponse.getMendixObject());
		params.put("customOpPath", _customOpPath);
		params.put("code", _code);
		params.put("state", _state);
		params.put("error", _error);
		params.put("errorDescription", _errorDescription);
		return (java.lang.String) Core.microflowCall("Email_Connector.PRS_AuthCodeCallbackGET").withParams(params).execute(context);
	}
	public static void sample_ACT_CreateEmailFromTemplateAndThenSend(IContext context, email_connector.proxies.EmailAccount _emailAccountAsDataObject, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccountAsDataObject", _emailAccountAsDataObject == null ? null : _emailAccountAsDataObject.getMendixObject());
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.Sample_ACT_CreateEmailFromTemplateAndThenSend").withParams(params).execute(context);
	}
	public static void sample_ACT_SendEmailWithTemplate(IContext context, email_connector.proxies.EmailAccount _emailAccountAsDataObject, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccountAsDataObject", _emailAccountAsDataObject == null ? null : _emailAccountAsDataObject.getMendixObject());
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.Sample_ACT_SendEmailWithTemplate").withParams(params).execute(context);
	}
	public static boolean sample_ASU_SubscribeForEmailNotification(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.Sample_ASU_SubscribeForEmailNotification").withParams(params).execute(context);
	}
	public static void sE_Cleanup(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("Email_Connector.SE_Cleanup").withParams(params).execute(context);
	}
	public static void sE_SendQueuedEmails(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.SE_SendQueuedEmails").withParams(params).execute(context);
	}
	public static void sUB_CreateLogItem(IContext context, java.lang.String _triggeredInMF, email_connector.proxies.ENUM_LogType _logType, java.lang.String _message, email_connector.proxies.EmailMessage _emailMessage, email_connector.proxies.EmailAccount _emailAccount, boolean _isUnread, system.proxies.Error _error)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TriggeredInMF", _triggeredInMF);
		params.put("LogType", _logType == null ? null : _logType.name());
		params.put("Message", _message);
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		params.put("isUnread", _isUnread);
		params.put("Error", _error == null ? null : _error.getMendixObject());
		Core.microflowCall("Email_Connector.SUB_CreateLogItem").withParams(params).execute(context);
	}
	public static java.lang.String sUB_Decrypt(IContext context, java.lang.String _encryptedString, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EncryptedString", _encryptedString);
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		return (java.lang.String) Core.microflowCall("Email_Connector.SUB_Decrypt").withParams(params).execute(context);
	}
	public static java.util.List<mxmodelreflection.proxies.Token> sUB_DuplicateTokenList(IContext context, java.util.List<mxmodelreflection.proxies.Token> _tokenList)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_tokenList = null;
		if (_tokenList != null)
		{
			listparam_tokenList = new java.util.ArrayList<>();
			for (var obj : _tokenList) {
				listparam_tokenList.add(obj.getMendixObject());
			}
		}
		params.put("TokenList", listparam_tokenList);

		java.util.List<IMendixObject> objs = Core.microflowCall("Email_Connector.SUB_DuplicateTokenList").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> mxmodelreflection.proxies.Token.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static boolean sUB_EmailAccount_CheckServerConnection(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.SUB_EmailAccount_CheckServerConnection").withParams(params).execute(context);
	}
	public static void sUB_EmailAccount_Delete(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.SUB_EmailAccount_Delete").withParams(params).execute(context);
	}
	public static void sUB_EmailAccount_OAuthToken_ReplaceExpired(IContext context, email_connector.proxies.OAuthToken _expiredOAuthToken, email_connector.proxies.EmailAccount _emailAccount, email_connector.proxies.OAuthToken _newOAuthToken)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ExpiredOAuthToken", _expiredOAuthToken == null ? null : _expiredOAuthToken.getMendixObject());
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		params.put("NewOAuthToken", _newOAuthToken == null ? null : _newOAuthToken.getMendixObject());
		Core.microflowCall("Email_Connector.SUB_EmailAccount_OAuthToken_ReplaceExpired").withParams(params).execute(context);
	}
	public static void sUB_EmailAccount_Save(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.SUB_EmailAccount_Save").withParams(params).execute(context);
	}
	public static void sUB_EmailAccount_SubscribeForEmailNotification(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.SUB_EmailAccount_SubscribeForEmailNotification").withParams(params).execute(context);
	}
	public static java.util.List<email_connector.proxies.Attachment> sUB_EmailMessage_SetAttachments(IContext context, java.util.List<system.proxies.FileDocument> _fileDocumentList, email_connector.proxies.EmailMessage _email)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_fileDocumentList = null;
		if (_fileDocumentList != null)
		{
			listparam_fileDocumentList = new java.util.ArrayList<>();
			for (var obj : _fileDocumentList) {
				listparam_fileDocumentList.add(obj.getMendixObject());
			}
		}
		params.put("FileDocumentList", listparam_fileDocumentList);

		params.put("Email", _email == null ? null : _email.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Email_Connector.SUB_EmailMessage_SetAttachments").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> email_connector.proxies.Attachment.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static java.lang.String sUB_GenerateOAuthNonce(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.String) Core.microflowCall("Email_Connector.SUB_GenerateOAuthNonce").withParams(params).execute(context);
	}
	public static java.util.List<email_connector.proxies.Attachment> sUB_GetEmailTemplateAttachments(IContext context, java.util.List<system.proxies.FileDocument> _fileDocumentList, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_fileDocumentList = null;
		if (_fileDocumentList != null)
		{
			listparam_fileDocumentList = new java.util.ArrayList<>();
			for (var obj : _fileDocumentList) {
				listparam_fileDocumentList.add(obj.getMendixObject());
			}
		}
		params.put("FileDocumentList", listparam_fileDocumentList);

		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Email_Connector.SUB_GetEmailTemplateAttachments").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> email_connector.proxies.Attachment.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static email_connector.proxies.OAuthProvider sUB_GetFirstOAuthProvider(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Email_Connector.SUB_GetFirstOAuthProvider").withParams(params).execute(context);
		return result == null ? null : email_connector.proxies.OAuthProvider.initialize(context, result);
	}
	public static email_connector.proxies.OAuthToken sUB_GetNewOAuthToken_AuthCodeGrantFlow(IContext context, email_connector.proxies.OAuthProvider _oAuthProvider, email_connector.proxies.EmailAccount _emailAccount, email_connector.proxies.OAuthToken _oAuthToken)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("OAuthProvider", _oAuthProvider == null ? null : _oAuthProvider.getMendixObject());
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		params.put("OAuthToken", _oAuthToken == null ? null : _oAuthToken.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Email_Connector.SUB_GetNewOAuthToken_AuthCodeGrantFlow").withParams(params).execute(context);
		return result == null ? null : email_connector.proxies.OAuthToken.initialize(context, result);
	}
	public static email_connector.proxies.OAuthToken sUB_GetNewOAuthToken_ClientCredentialsGrantFlow(IContext context, email_connector.proxies.EmailAccount _emailAccount, email_connector.proxies.OAuthProvider _oAuthProvider)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		params.put("OAuthProvider", _oAuthProvider == null ? null : _oAuthProvider.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Email_Connector.SUB_GetNewOAuthToken_ClientCredentialsGrantFlow").withParams(params).execute(context);
		return result == null ? null : email_connector.proxies.OAuthToken.initialize(context, result);
	}
	public static java.lang.String sUB_GetOAuthURL(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		return (java.lang.String) Core.microflowCall("Email_Connector.SUB_GetOAuthURL").withParams(params).execute(context);
	}
	public static void sUB_RetrieveEmails(IContext context, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.SUB_RetrieveEmails").withParams(params).execute(context);
	}
	public static boolean sUB_SendEmail(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.SUB_SendEmail").withParams(params).execute(context);
	}
	public static void sUB_SendEmailFromJavaAction(IContext context, email_connector.proxies.EmailAccount _emailAccount, email_connector.proxies.EmailMessage _emailMessage, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		Core.microflowCall("Email_Connector.SUB_SendEmailFromJavaAction").withParams(params).execute(context);
	}
	public static void sUB_SendQueuedEmail(IContext context, email_connector.proxies.EmailMessage _emailMessage, email_connector.proxies.EmailAccount _emailAccount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		params.put("EmailAccount", _emailAccount == null ? null : _emailAccount.getMendixObject());
		Core.microflowCall("Email_Connector.SUB_SendQueuedEmail").withParams(params).execute(context);
	}
	public static boolean vAL_BatchDetails(IContext context, email_connector.proxies.IncomingEmailConfiguration _incomingEmailConfiguration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("IncomingEmailConfiguration", _incomingEmailConfiguration == null ? null : _incomingEmailConfiguration.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.VAL_BatchDetails").withParams(params).execute(context);
	}
	public static boolean vAL_EmailRecipients(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.VAL_EmailRecipients").withParams(params).execute(context);
	}
	public static boolean vAL_EmailTemplateRecipients(IContext context, email_connector.proxies.EmailTemplate _emailTemplate)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailTemplate", _emailTemplate == null ? null : _emailTemplate.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("Email_Connector.VAL_EmailTemplateRecipients").withParams(params).execute(context);
	}
	public static void vAL_LDAPConfiguration(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("Email_Connector.VAL_LDAPConfiguration").withParams(params).execute(context);
	}
	public static void vAL_Pk12Certificate(IContext context, email_connector.proxies.EmailMessage _emailMessage)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("EmailMessage", _emailMessage == null ? null : _emailMessage.getMendixObject());
		Core.microflowCall("Email_Connector.VAL_Pk12Certificate").withParams(params).execute(context);
	}
}
